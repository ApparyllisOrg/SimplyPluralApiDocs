openapi: "3.0.2"
info:
  title: Simply Plural API
  description: This API reference documents the public api endpoints. You can see a list of all public endpoints here https://github.com/ApparyllisOrg/SimplyPluralApi/blob/release/src/api/v1/routes.ts
  version: "1.0"
servers:
  - url: https://api.apparyllis.com
  - url: https://devapi.apparyllis.com

tags:
  - name: Analytics
    description: Everything related to analytics
    x-displayName: Analytics

  - name: Automated Timers
    description: Everything related to automated timers
    x-displayName: Automated Timers

  - name: Board Messages
    description: Everything related to board messages
    x-displayName: Board Messages

  - name: Chat Messages
    description: Everything related to chat messages
    x-displayName: Chat Messages

  - name: Chat Categories
    description: Everything related to chat categories
    x-displayName: Chat Categories

  - name: Chat Channels
    description: Everything related to chat channels
    x-displayName: Chat Channels

  - name: Comments
    description: Everything related to comments
    x-displayName: Comments

  - name: Custom Fronts
    description: Everything related to custom fronts
    x-displayName: Custom Fronts

  - name: Friends
    description: Everything related to friends
    x-displayName: Friends

  - name: Front History
    description: Everything front history and fronters
    x-displayName: Front History

  - name: Groups
    description: Everything related toGroups
    x-displayName: Groups

  - name: Members
    description: Everything related to members
    x-displayName: Members

  - name: Notes
    description: Everything related to notes
    x-displayName: Notes

  - name: Polls
    description: Everything related to polls
    x-displayName: Polls

  - name: PluralKit
    description: Evertying related to PluralKit
    x-displayName: PluralKit

  - name: Repeated Timers
    description: Everything related to repeated timers
    x-displayName: Repeated Timers

  - name: User
    description: Getting and updating the user
    x-displayName: User

x-tagGroups:
  - name: Common
    tags:
      - Members
      - Groups
      - Custom Fronts
      - Front History
  - name: Everything else
    tags:
      - User
      - Automated Timers
      - Board Messages
      - Repeated Timers
      - Friends
      - Polls
      - Comments
      - Notes
  - name: Integrations
    tags:
      - PluralKit

components:
  securitySchemes:
    APITokenAuth:
      type: apiKey
      in: header
      name: Authorization

paths:
  /v1/member/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get Member"
      description: "Get a member by Id"
      tags:
        - Members
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/member/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add member"
      description: "Add a member"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      tags:
        - Members
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/member"

      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update member"
      description: "Update member"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/member"
      tags:
        - Members
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete member"
      description: "Delete a member by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Members
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/members/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all members"
      description: "Get members from a system by Id"
      tags:
        - Members
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/group/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get group"
      description: "Get a group by Id"
      parameters:
          $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Groups
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/group/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add group"
      description: "Add a group by (optionally) an Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/groups"
      tags:
        - Groups
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update group"
      description: "Update a group by Id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/groups"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Groups
    delete:
      summary: "Delete group"
      description: "Delete a group by Id"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Groups

  /v1/groups/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all groups"
      description: "Get groups of a system by Id"
      tags:
        - Groups
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/note/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get note"
      description: "Get a note by Id"
      parameters:
          $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Notes
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/note/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add note"
      description: "Add a note by (optionally) an Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/notes"
      tags:
        - Notes
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update note"
      description: "Update a note by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/notesPatch"
      tags:
        - Notes
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete note"
      description: "Delete a note by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Notes
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/notes/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all notes"
      description: "Get notes of a system by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Notes
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/customFront/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get custom front"
      description: "Get a Custom Front by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Custom Fronts
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/customFront/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add custom front"
      description: "Add a Custom Front"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/customFront"
      tags:
        - Custom Fronts
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update custom front"
      description: "Update a Custom Front by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/customFront"
      tags:
        - Custom Fronts
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete custom front"
      description: "Delete a Custom Front by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Custom Fronts
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/customFronts/{systemId}:
    get:
      summary: "Get all custom fronts"
      description: "Get custom fronts of a system by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Custom Fronts
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/comment/{type}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get comments"
      description: "Get comments from a document of a particular type (groups, members, customFronts, etc.)"
      tags:
        - Comments
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          # todo: update this string
          description: String Id of the document you wish to get comments from
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: 'Type of the comment [groups, members, customFronts]'
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/comment/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add comment"
      description: "Add a Comment"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/comments"
      tags:
        - Comments
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update comment"
      description: "Update a Comment by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/commentsPatch"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Comments
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete comment"
      description: "Delete a Comment by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Comments

  /v1/comments/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get specific comment"
      description: "Get a specific comment from a system"
      tags:
        - Comments
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/poll/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get poll"
      description: "Get a Poll by id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Polls
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/poll/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add poll"
      description: "Add a Poll"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/polls"
      tags:
        - Polls
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update poll"
      description: "Update a Poll by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/polls"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Polls
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete poll"
      description: "Delete a Poll by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Polls

  /v1/polls/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all polls"
      description: "Get polls from a system"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Polls
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/timer/automated/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get automated timer"
      description: "Get an Automated Timer by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Automated Timers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./SimplyPluralApiBodies.yml#/components/schemas/automatedTimerContainer"
        "404":
          description: NOT FOUND
  /v1/timer/automated/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add automated timer"
      description: "Add an Automated Timer"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/automatedTimer"
      tags:
        - Automated Timers
      responses:
        "200":
          description: OK
          content:
            text:
              schema:
                type: string
              example: "\"67e78b964cfb3eed32ef8848\""
        "400":
          description: BAD REQUEST
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update automated timer by Id"
      description: "Update an Automated Timer by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/automatedTimer"
      tags:
        - Automated Timers
      responses:
        "200":
          description: OK
        "400":
          description: BAD REQUEST
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete automated timer"
      description: "Delete an Automated Timer by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Automated Timers
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/timers/automated/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all automated timers"
      description: "Get Automated Timers for a system"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Automated Timers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./SimplyPluralApiBodies.yml#/components/schemas/automatedTimerContainer"
        "404":
          description: NOT FOUND

  /v1/timer/repeated/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get repeated timer"
      description: "Get an Repeated Timer by id"
      tags:
        - Repeated Timers
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/timer/repeated/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add repeated timer"
      description: "Add an Repeated Timer"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/repeatedReminder"
      tags:
        - Repeated Timers
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update repeated timer"
      description: "Update an Repeated Timer by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/repeatedReminder"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Repeated Timers
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete repeated timer"
      description: "Delete an Repeated Timer by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
      tags:
        - Repeated Timers

  /v1/timers/repeated/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all repeated timers"
      description: "Get Repeated Timers from a system"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Repeated Timers
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/fronters/:
    get:
      security:
        - APITokenAuth: []
      summary: "Get current fronters (self)"
      description: "Get fronters from the currently authenticated system"
      tags:
        - Front History
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/frontHistory/{systemId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get front history"
      description: "Get Front History from a system between 2 timestamps"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Front History
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/frontHistory/{id}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add front history entry"
      description: "Add a Front history entry"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/frontHistory"
      tags:
        - Front History
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update front history entry"
      description: "Update a Front History entry by an Id"
      tags:
        - Front History
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/frontHistory"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete front history entry"
      description: "Delete a Front History Entry by an Id"
      tags:
        - Front History
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/frontHistory/member/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get front history from member"
      description: "Get Front History from a member, optionally beteen two timestamps"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Front History
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/frontHistory/{systemId}/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get specific front history entry"
      description: "Get a single Front History document by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Front History
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/me:
    get:
      security:
        - APITokenAuth: []
      summary: "Get your authenticated user Id"
      description: "Get the user Id associated with the authentication token"
      tags:
        - Users
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/user/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get user"
      description: "Get a user"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Users
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update user"
      description: "Update a user (your own)"
      tags:
        - Users
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/user/username/{id}:
    patch:
      security:
        - APITokenAuth: []
      summary: "Set username"
      description: "Set username for user"
      tags:
        - Users
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/user/generateReport:
    post:
      security:
        - APITokenAuth: []
      summary: "Generate report"
      description: "Generate a user report for the authenticated user"
      tags:
        - Users
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/user/{systemId}/reports:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all reports"
      description: "Get all reports of the authenticated user"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemId"
      tags:
        - Users
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/user/{systemId}/report/{id}:
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete report"
      description: "Delete a specific report"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/systemIdAndObjectId"
      tags:
        - Users
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/friends:
    get:
      security:
        - APITokenAuth: []
      summary: "Get friends"
      description: "Get friends of the authenticated user"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/requests/incoming:
    get:
      security:
        - APITokenAuth: []
      summary: "Get received friend requests"
      description: "Get incoming friend requests of the authenticated user"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/requests/outgoing:
    get:
      security:
        - APITokenAuth: []
      summary: "Get sent friend requests"
      description: "Get outgoing friend requests of the autheticated user"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/getFrontValues:
    get:
      security:
        - APITokenAuth: []
      summary: "Get current fronters of system (text-format)"
      description: "Get front values (text-format) of all the authenticated user's friends"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/request/add/{username}:
    post:
      security:
        - APITokenAuth: []
      summary: "Add friend"
      description: "Add a friend by username or userId/systemId"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/username"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/request/respond/{username}:
    post:
      security:
        - APITokenAuth: []
      summary: "Respond to friend request"
      description: "Respond to a friend request by username or userId/systemId"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/username"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/request/{username}:
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete friend request"
      description: "Remove a friend request"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/username"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friends/remove/{username}:
    delete:
      security:
        - APITokenAuth: []
      summary: "Remove friend"
      description: "Remove a friend by username or userId/systemId"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/username"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/friend/{friendId}:
    patch:
      security:
        - APITokenAuth: []
      summary: "Update friend settings"
      description: "Update your settings for a friend by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/friendId"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friend/{systemId}/{friendId}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get friend settings"
      description: "Get a friend from a user"
      tags:
        - Friends
      parameters:
        - in: path
          name: systemId
          schema:
            type: string
          required: true
          description: The Id of the origin friend (Typically you). This can be a mongo Id but also a plain string (backwards-compatibility).
        - in: path
          name: friendId
          schema:
            type: string
          required: true
          description: The Id of the destination friend (Typically your friend). This can be a mongo Id but also a plain string (backwards-compatibility).
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friend/{friendId}/getFront:
    get:
      security:
        - APITokenAuth: []
      summary: "Update friend settings"
      description: "Get the current fronters of a friend"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/friendId"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/friend/{friendId}/getFrontValue:
    get:
      security:
        - APITokenAuth: []
      summary: "Get current fronters of system"
      description: "Get the current fronters (in text form) of a friend"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/friendId"
      tags:
        - Friends
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/integrations/pluralkit/sync/member/{id}:
    patch:
      security:
        - APITokenAuth: []
      summary: "Sync member to or from pluralkit"
      description: "Sync a specific member to or from PluralKit"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - PluralKit
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
  /v1/integrations/pluralkit/sync/members:
    get:
      security:
        - APITokenAuth: []
      summary: "Sync all members to or from pluralkit"
      description: "Sync all system members to or from PluralKit"
      tags:
        - PluralKit
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/chat/message/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get message"
      description: "Get a specific message"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Chat Messages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatMessageContainer"
        "404":
          description: NOT FOUND
    post:
      security:
        - APITokenAuth: []
      summary: "Add message"
      description: "Add a new message"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatMessage"
      tags:
        - Chat Messages
      responses:
        "200":
          description: OK
          content:
            text:
              schema:
                type: string
              example: "\"67d63acba3e170d9b68cb7f9\""
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update message"
      description: "Update a message"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatMessagePatch"
      tags:
        - Chat Messages
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete message"
      description: "Delete a message"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Chat Messages
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/chat/messages/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get messages"
      description: "Get messages of a specific channel"
      parameters:
        - in: path
          name: id
          required: true
          description: Id of the channel, this can be a mongo Id but also a plain string (backwards-compatibility).
          schema:
            type: string
        - in: query
          name: limit
          required: true
          description: Amount of messages to fetch
          schema:
            type: integer
            minimum: 1
            maximum: 100
      tags:
        - Chat Messages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatMessageContainer"
        "400":
          description: BAD REQUEST
        "404":
          description: NOT FOUND

  /v1/chat/category/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get category"
      description: "Get a specific category"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Chat Categories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatCategoryContainer"
        "404":
          description: NOT FOUND
    post:
      security:
        - APITokenAuth: []
      summary: "Add category"
      description: "Add a new category"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatCategory"
      tags:
        - Chat Categories
      responses:
        "200":
          description: OK
          content:
            text:
              schema:
                type: string
              example: "\"67d63acba3e170d9b68cb7f9\""
        "400":
          description: BAD REQUEST
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update category"
      description: "Update a category"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatCategory"
      tags:
        - Chat Categories
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete category"
      description: "Delete a category"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Chat Categories
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/chat/categories:
    get:
      security:
        - APITokenAuth: []
      summary: "Get chat categories"
      description: "Get all chat categories"
      tags:
        - Chat Categories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatCategoryContainer"
        "404":
          description: NOT FOUND

  /v1/chat/channel/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get channel"
      description: "Get a specific channel"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Chat Channels
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatChannelContainer"
        "404":
          description: NOT FOUND
    post:
      security:
        - APITokenAuth: []
      summary: "Add channel"
      description: "Add a new channel"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatChannel"
      tags:
        - Chat Channels
      responses:
        "200":
          description: OK
          content:
            text:
              schema:
                type: string
              example: "\"67d63acba3e170d9b68cb7f9\""
        "400":
          description: BAD REQUEST
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update channel"
      description: "Update a channel"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatChannel"
      tags:
        - Chat Channels
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete channel"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      description: "Delete a channel"
      tags:
        - Chat Channels
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/chat/channels:
    get:
      security:
        - APITokenAuth: []
      summary: "Get chat channels"
      description: "Get all chat channels"
      tags:
        - Chat Channels
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./SimplyPluralApiBodies.yml#/components/schemas/chatChannelContainer"
        "404":
          description: NOT FOUND

  /v1/board/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get specific board message"
      description: "Get specific board message by Id"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Board Messages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/boardMessageContatiner"
        "404":
          description: NOT FOUND
    post:
      security:
        - APITokenAuth: []
      summary: "Write board message"
      description: "Write a new board message for a member"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectIdOptional"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/boardMessage"
      tags:
        - Board Messages
      responses:
        "200":
          description: OK
          content:
            text:
              schema:
                type: string
              example: "\"67d63acba3e170d9b68cb7f9\""
        "400":
          description: BAD REQEST
        "404":
          description: NOT FOUND
    patch:
      security:
        - APITokenAuth: []
      summary: "Update board message"
      description: "Update a board message for a member"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./SimplyPluralApiBodies.yml#/components/schemas/boardMessagePatch"
      tags:
        - Board Messages
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND
    delete:
      security:
        - APITokenAuth: []
      summary: "Delete board message"
      description: "Delete a board message"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Board Messages
      responses:
        "200":
          description: OK
        "404":
          description: NOT FOUND

  /v1/board/member/{id}:
    get:
      security:
        - APITokenAuth: []
      summary: "Get all board messages for member"
      description: "Get all board messages for member"
      parameters:
        $ref: "./SimplyPluralApiCommons.yml#/components/parameters/objectId"
      tags:
        - Board Messages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./SimplyPluralApiBodies.yml#/components/schemas/boardMessageContatiner"
        "404":
          description: NOT FOUND

  /v1/board/unread:
    get:
      security:
        - APITokenAuth: []
      summary: "Get unread board messages"
      description: "Get all unread board messages for this system"
      tags:
        - Board Messages
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./SimplyPluralApiBodies.yml#/components/schemas/boardMessageContatiner"
        "404":
          description: NOT FOUND

  /v1/user/analytics:
    get:
      security:
        - APITokenAuth: []
      summary: "Get analytics"
      description: "Get analytics of the authenticated user"
      parameters:
        - name: startTime
          in: query
          description: 'Start time in Unix timestamp format (millisecond accuracy)'
          required: true
          schema:
            type: object
            properties:
              startTime:
                type: integer
        - name: endTime
          in: query
          description: 'End time in Unix timestamp format (millisecond accuracy)'
          required: true
          schema:
            type: object
            properties:
              endTime:
                type: integer
      tags:
        - Analytics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "./SimplyPluralApiBodies.yml#/components/schemas/analytics"
        "404":
          description: NOT FOUND
